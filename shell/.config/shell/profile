# vim: set ft=sh:

#######
# TOC #
#######

###
# Prelude
##
# TOC
# Notes
# Shell
# XDG
# PATH Setup

###
# Main
##
# Java
# JavaScript/Node
# Python
# Rust
# Other
#   Vim

###
# Finale
##
# Other
# Postscript

#########
# Notes #
#########

# Make sure that this parses under POSIX shell and fish
# Document everything!
#   Prefix block labels with the section
#   Label blocks with the configured program/utility/etc

########
# Main #
########

# Polyglot support

# Aliasing is a relatively expensive function in fish, at approximately 650ns per alias!
# Although we could dedupe a lot of this code, profiling indicates that this improves startup time by .6ms per alias

test -n "$BASH_VERSION" && eval '
alias if_bash=true
alias if_fish=false
alias if_zsh=false

alias if_bash_eval=eval
alias if_fish_eval=false
alias if_zsh_eval=false

alias if_posixish=true
'
test -n "$FISH_VERSION" && eval '
function if_bash; return 1; end
function if_fish; return 0; end
function if_zsh; return 1; end

function if_bash_eval; return 1; end
function if_fish_eval; eval $argv; end
function if_zsh_eval; return 1; end

function if_posixish; return 1; end
function if_posixish_eval; return 1; end
'
test -n "$ZSH_VERSION" && eval '
alias if_bash=false
alias if_fish=false
alias if_zsh=true

alias if_bash_eval=false
alias if_fish_eval=false
alias if_zsh_eval=eval

alias if_posixish=true
'

if_fish || eval 'test -z "${0##*dash}" && alias if_posixish=true'
if_posixish && eval 'alias if_posixish_eval=eval'

# Activate zsh emulation
if_zsh && emulate -R bash

# shellcheck disable=SC2016
if_posixish_eval '
set_() { eval "$1=\"$2\""; }
unset_() { unset "$1"; }
command_() { command -v "$1" >/dev/null; return $?; }
check_term() { test "$TERM" = "$1"; return $?; }
'
# shellcheck disable=SC2016
if_fish_eval '
function set_; set -g $argv; end
function unset_; set -eg $argv; end
function command_; command -q $argv; end
function check_term -a term; test "$TERM" = "$term"; return $status; end
'

# Define Teardown
set_ aliases 'if_bash if_fish if_zsh if_bash_eval if_fish_eval if_zsh_eval if_posixish if_posixish_eval'
set_ functions 'set_ unset_ command_ check_term'
set_ variables aliases functions variables
# shellcheck disable=SC2016,2154
if_posixish_eval "
teardown_() {
	unalias $aliases
	unset -f $functions
	unset -v $variables
}
"
if_fish_eval "
function teardown_
	functions -e $aliases
	functions -e $functions
	set -e $variables
end
"

#########
# Shell #
#########
export EDITOR=vi

# PS1
if_bash && export PS1='\u@\h:\W \\$ '

#######
# XDG #
#######
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"

########
# PATH #
########

# Initialize $PATH
# path="$PATH"
# Disabled because path_helper
# path="/usr/local/bin:$PATH"

# Homebrew
# export PATH="/usr/local/bin:/usr/local/sbin:$PATH"

# MacPorts
# export PATH="/opt/local/bin:/opt/local/sbin:$PATH"

# User local bin
# Used by Pipx
export PATH="$HOME/.local/bin:$PATH"

# Shell config bin
# Used for cross-platform utility scripts
export PATH="$XDG_CONFIG_HOME/shell/bin:$PATH"

# Git scripts bin
export PATH="$XDG_CONFIG_HOME/git/bin:$PATH"

######
# Go #
######
export GOPATH="$HOME/.local/share/go"
export PATH="$GOPATH/bin:$PATH"

########
# Java #
########

export GRADLE_USER_HOME="$XDG_DATA_HOME"/gradle 

##############
# JavaScript #
##############

export NODE_REPL_HISTORY="$XDG_DATA_HOME"/node_repl_history
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME"/npm/npmrc
export VOLTA_HOME="$XDG_DATA_HOME/volta"
export PATH="$VOLTA_HOME/bin:$PATH"

##########
# Python #
##########

# Python: MacPorts system bin
# - Disabled because pathhelper
# path="/opt/local/Library/Frameworks/Python.framework/Versions/3.7/bin/:$PATH"

# Python: Python 3.7 user bin
# export PATH="/Users/az/Library/Python/3.7/bin:$PATH"

# Python: Pipenv
# export PIPENV_VENV_IN_PROJECT=1
# export PIPENV_DEFAULT_PYTHON_VERSION='3.10'
# export PIPENV_IGNORE_VIRTUALENVS=1

# Python: Pylint XDG
export PYLINTHOME="$XDG_CACHE_HOME"/pylint

export JUPYTER_PLATFORM_DIRS=1

# Python: NLTK Data Directory
# export NLTK_DATA="$XDG_DATA_HOME"/nltk_data

########
# Ruby #
########

export GEM_HOME="$XDG_DATA_HOME/gem"
export GEM_SPEC_CACHE="$XDG_CACHE_HOME/gem"
export BUNDLE_USER_CONFIG="$XDG_CONFIG_HOME/bundle"
export BUNDLE_USER_CACHE="$XDG_CACHE_HOME/bundle"
export BUNDLE_USER_PLUGIN="$XDG_DATA_HOME/bundle"

########
# Rust #
########

# Rust: Rustup and Cargo XDG
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export CARGO_HOME="$XDG_DATA_HOME/cargo"

# Rust: Cargo path
export PATH="$CARGO_HOME/bin:$PATH"

#########
# Other #
#########

# path="/usr/local/opt/berkeley-db@4/bin:$PATH"
export ASDF_CONFIG_FILE="$XDG_CONFIG_HOME/asdf/asdfrc"
export ASDF_DATA_DIR="$XDG_DATA_HOME/asdf"

export LIMA_HOME="$XDG_DATA_HOME/lima"

# Unison: XDG
export UNISON="$XDG_DATA_HOME"/unison

# Vim: XDG
# shellcheck disable=SC2016
export VIMINIT='if !has("nvim") | source $XDG_CONFIG_HOME/vim/vimrc | else | source $XDG_CONFIG_HOME/nvim/init.vim | endif'
# shellcheck disable=SC2016
export GVIMINIT='if !has("nvim") | source $XDG_CONFIG_HOME/vim/gvimrc | else | source $XDG_CONFIG_HOME/nvim/ginit.vim | endif'

# Byobu: Python
# export BYOBU_PYTHON=/usr/local/bin/python3

# fzf
set_ finder_common "command fd -HL -E .git -E .venv -E '*.app' -E node_modules -E /dev -E /sys -E /proc"
set_ finder_trim 'sed -E s@^./@@'
# shellcheck disable=SC2016,SC2154
set_ finder_ctrl_t_command "$finder_common"' . "$dir" | '"$finder_trim"
# shellcheck disable=SC2016,SC2154
set_ finder_alt_c_command "$finder_common"' -t d . "$dir" | '"$finder_trim"

# shellcheck disable=SC2016,SC2154
command_ sk && export \
	SKIM_DEFAULT_COMMAND="$finder_common" \
	SKIM_DEFAULT_OPTS='--bind ctrl-k:kill-line' \
	SKIM_CTRL_T_COMMAND="$finder_ctrl_t_command" \
	SKIM_ALT_C_COMMAND="$finder_alt_c_command" \
;

# shellcheck disable=SC2016,SC2154
command_ fzf && export \
	FZF_DEFAULT_COMMAND="$finder_common" \
	FZF_DEFAULT_OPTS='--bind ctrl-k:kill-line' \
	FZF_CTRL_T_COMMAND="$finder_ctrl_t_command" \
	FZF_ALT_C_COMMAND="$finder_alt_c_command" \
	FZF_TMUX_HEIGHT='~90%' \
;

if_fish_eval 'sk_key_bindings || fzf_key_bindings || true'

unset_ finder_common
unset_ finder_trim
unset_ finder_ctrl_t_command
unset_ finder_alt_c_command

# Homebrew
export HOMEBREW_AUTO_UPDATE_SECS=1200

# Packer
export PACKER_PLUGIN_PATH="$XDG_DATA_HOME/packer/plugins"

# icat
alias icat=false
check_term xterm-kitty && eval 'alias icat="kitty +kitten icat"'
check_term WezTerm && eval 'alias icat="wezterm imgcat"'


############
# Includes #
############

# TODO: Implement includes

##########
# Finale #
##########

# Bash Completion
# [ -f /usr/local/etc/bash_completion ] && . /usr/local/etc/bash_completion
# shellcheck disable=1091
if_bash && [ -f /opt/local/etc/profile.d/bash_completion.sh ] && . /opt/local/etc/profile.d/bash_completion.sh
if_zsh && emulate -R zsh

##############
# Postscript #
##############
# Teardown polyglot support

teardown_
