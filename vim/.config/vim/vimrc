" vim: set tabstop=8 shiftwidth=8:

" Prelude

set nocompatible              		" Disable vi compat

" Vim doesn't work very well with fish
if &shell =~# 'fish$'
    set shell=sh
endif

" XDG setup
let use_xdg_config_home = strlen($XDG_CONFIG_HOME) > 0
let use_xdg_data_home = strlen($XDG_DATA_HOME) > 0
if use_xdg_data_home
	let g:vim_data_home = expand($XDG_DATA_HOME . '/vim')
else
	let g:vim_data_home = expand($HOME . '/.local/share/vim')
endif
if use_xdg_config_home
	let g:vim_config_home = expand($XDG_CONFIG_HOME . '/vim')
else
	let g:vim_config_home = expand($HOME . '.config/vim')
endif

" As suggested by Arch Wiki, but with some changes disabled
call mkdir(g:vim_data_home, 'p', 0700)
call mkdir(g:vim_data_home . '/undo', 'p', 0700)
" mkdir(g:vim_data_home . '/swap', 'p', 0700)
" mkdir(g:vim_data_home . '/backup', 'p', 0700)
call mkdir(g:vim_data_home . '/view', 'p', 0700)
let &undodir = g:vim_data_home . '/undo'
" set directory=g:vim_data_home . '/swap'
" set backupdir=g:vim_data_home . '/backup'
let &viewdir = g:vim_data_home . '/view'
exe "set viminfo+='1000,n" . g:vim_data_home . '/viminfo'

let &rtp = join([g:vim_config_home, g:vim_data_home, $VIMRUNTIME, g:vim_config_home . '/after'], ',')

" Plugin Preload Settings
source <sfile>:h/init/01-plug-preload.vim
source <sfile>:h/init/02-plugin-preload.vim

" Plugins
source <sfile>:h/init/10-plug-plugins.vim

" Settings
source <sfile>:h/init/20-settings.vim
source <sfile>:h/init/21-mappings.vim
source <sfile>:h/init/22-plugin-settings.vim

" Init
autocmd VimEnter * set nolazyredraw lazyredraw
